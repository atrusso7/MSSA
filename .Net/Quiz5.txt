Output:
Q1:
Moonstruct Sum: 40

Q2:
Which Color?
1. Red
2. White
3. Blue
3
Your color is blue

Q3:
My birthday is on December 11, 1991

Q4:
Author: Steinbeck
Book Name: Grapes of Wrath
Number of Pages: 464

Q5:
b.
pNumb Length: 7
names Length: 4

c.
Third index of pNumbers is 7 and names is Daisy

d.
First three copied to names:
2 3 5 Daisy

e.
pNumbers:
2 3 5 7 11 13 17

names:
Mickey Minnie Donald Daisy

f.
Mean: 8.285714285714286
Max: 17
Min: 2
Sum: 58
Median: 7
Mode: 2
Standard Deviation: 5.146823867043378

g.
11 is at index of 4
Donald is at index of 2

Q6:

Line 13 is reserved for a literal floating point constant. To fix place an 'm' after 3.14.
-----------------------------------------------------------------------------------------------------------------------------------------
Input: 

using System;
using CenterSpace.NMath.Stats;

namespace _11Feb.NET
{
    class Program
    {

Q1.
        public struct moonStruct
        {
            public int x;
            public int y;
        }
Q2.
        public enum Color { red = 1, white = 2, blue = 3};
        public enum Months
        {
            January = 1, 
            Feburary = 2, 
            March = 3, 
            April = 4, 
            May = 5, 
            June = 6, 
            July = 7, 
            August = 8, 
            September = 9, 
            October = 10, 
            November = 11, 
            December = 12
        }
        public struct birthday
        {
            public int bday, byear;
            public Months bmonth;
        }
        static void Main()
        {
Q1.
            moonStruct m1 = new moonStruct();
            m1.x = 15;
            m1.y = 25;
            int sum = m1.x + m1.y;
            Console.WriteLine("\nMoonstruct Sum: " + sum);
Q2.
            Console.WriteLine("\nWhich Color?\n1. Red\n2. White\n3. Blue");
            int b = Convert.ToInt32(Console.ReadLine());
            Color myColor = (Color)b;
            try
            {
                if (b > 3)
                {
                    Console.WriteLine("Invalid Entry");      
                }
                switch (myColor)
                {
                    case Color.red:
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.WriteLine("Your color is red");
                        break;
                    case Color.white:
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.WriteLine("Your color is white");
                        break;
                    case Color.blue:
                        Console.ForegroundColor = ConsoleColor.Blue;
                        Console.WriteLine("Your color is blue");
                        break;
                }
            }
            catch
            {
                Console.WriteLine("Invalid Entry");
            }

            Console.ForegroundColor = ConsoleColor.White; 
            birthday myBirthday = new birthday();
            myBirthday.bday = 11;
            myBirthday.bmonth = (Months)12;
            myBirthday.byear = 1991;
            Console.WriteLine($"\nMy birthday is on {myBirthday.bmonth} {myBirthday.bday}, {myBirthday.byear}");
Q4.
            Console.WriteLine($"\nAuthor: {Author.Authorname}\nBook Name: {Author.Bookname}\nNumber of Pages: {Author.numPages}");
Q5.
            int[] pNumbers = { 2, 3, 5, 7, 11, 13, 17 };
            string[] names = { "Mickey", "Minnie", "Donald", "Daisy" };
            string[] names2 = { "Mickey", "Minnie", "Donald", "Daisy" };

            int pNumbersLength = pNumbers.Length;
            Console.WriteLine("pNumb Length: " + pNumbersLength);
            int namesLength = names.Length;
            Console.WriteLine("names Length: " + namesLength);

            int pNumThird = pNumbers[3];
            string namesThird = names[3];
	    Console.WriteLine($"\nThird index of pNumbers is {pNumThird} and names is {namesThird}\n");

            for (int i = 0; i < 3; i++)
            {
                names2[i] = Convert.ToString(pNumbers[i]);
            }
            
            //Array.Copy(pNumbers, 0, names, 0, 3);
            Array.Sort(names2);
            Array.Sort(pNumbers);

            Console.WriteLine("\npNumbers: ");
            foreach(int i in pNumbers)
            {
                Console.Write(i + " ");
            }
            Console.WriteLine("\nnames: ");
            foreach(string i in names)
            {
                Console.Write(i + " ");
            }
            Console.WriteLine("\n\n\nMean: " + StatsFunctions.Mean(pNumbers));
            Console.WriteLine("Max: " + StatsFunctions.MaxValue(pNumbers));
            Console.WriteLine("Min: " + StatsFunctions.MinValue(pNumbers));
            Console.WriteLine("Sum: " + StatsFunctions.Sum(pNumbers));
            Console.WriteLine("Median: " + StatsFunctions.Median(pNumbers));
            Console.WriteLine("Mode: " + StatsFunctions.Mode(pNumbers));
            Console.WriteLine("Standard Deviation: " + StatsFunctions.StandardDeviation(pNumbers));

            for (int i = 0; i < pNumbers.Length; i++)
            {
                if (pNumbers[i] == 11)
                {
                    Console.WriteLine($"\n\n11 is at index of {i}");
                }
                else
                    continue;
            }
            for (int i = 0; i < names.Length; i++)
            {
                if (names[i] == "Donald")
                {
                    Console.WriteLine($"Donald is at index of {i}");
                }
            }
        }
    }
}



Q.4

using System;
using System.Collections.Generic;
using System.Text;

namespace _11Feb.NET
{
    public static class Author
    {
        public static string Authorname = "Steinbeck";
        public static string Bookname = "Grapes of Wrath";
        public static int numPages = 464;
    }
}
